
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Allow access if the user document has role 'admin'
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins can read/write any document in any top-level collection
    match /{collection}/{docId} {
        allow read, write: if isAdmin();
    }
    
    // Plans are public to read for any authenticated user
    match /plans/{planId} {
        allow get, list: if request.auth != null;
    }
    
    // Users can read and write to their own user document
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      // create is handled by a backend function (or registration), not directly by client
    }
    
    // Users can create payments for themselves
    match /payments/{paymentId} {
        allow create: if isOwner(request.resource.data.userId);
        // Only admins can read/update payment status
    }
    
    // Users can manage their own subcollections
    match /users/{userId}/{userCollection}/{docId} {
      allow read, write, delete: if isOwner(userId);
    }
  }
}
