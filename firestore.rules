
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      // Checks if the requesting user is the owner of the document.
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      // Checks if the requesting user has the 'admin' role in their user profile.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Collection: users ---
    match /users/{userId} {
      // Admins can list and view any user profile.
      allow list, get: if isAdmin();
      // Users can view and update their own profile.
      allow get, update: if isOwner(userId);
    }

    // --- Collection: plans ---
    match /plans/{planId} {
      // Admins can perform any action on plans.
      allow read, write: if isAdmin();
      // Authenticated users can view the list of available plans.
      allow list, get: if request.auth != null;
    }

    // --- Collection: payments ---
    match /payments/{paymentId} {
      // Admins can list, view, and update any payment.
      allow list, get, update: if isAdmin();
      // Users can create their own payment submission.
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // --- User Sub-collections ---
    // This rule covers all of a user's private data like campaigns, recipients, etc.
    match /users/{userId}/{userCollection}/{docId} {
      // Users can fully manage their own sub-collection documents.
      allow read, write, create, delete: if isOwner(userId);
      // Admins can read any user's sub-collection data for support/management.
      allow get, list: if isAdmin();
    }
  }
}
